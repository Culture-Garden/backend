name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  Deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Load a file from github repository
        uses: actions/checkout@v4

      - name: Install JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Make application.yml
        run: echo "${{secrets.APPLICATION_PROPERTIES}}" > src/main/resources/application.yml

      - name: Test and build
        run: ./gradlew clean build

      - name: Change built file name
        run: mv ./build/libs/*SNAPSHOT.jar ./project.jar

      - name: Compress
        run: tar -czvf $GITHUB_SHA.tar.gz project.jar appspec.yml scripts

      - name: Configure AWS credentials for connecting AWS resource
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}

      - name: ECR에 로그인하기
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker 이미지 생성
        run: docker build -t culture-server .

      - name: Docker 이미지에 Tag 붙이기
        run: docker tag culture-server ${{ steps.login-ecr.outputs.registry }}/culture-server:latest

      - name: ECR에 Docker 이미지 Push하기
        run: docker push ${{ steps.login-ecr.outputs.registry }}/culture-server:latest

      - name: SSH로 EC2에 접속하기
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            docker stop culture-server || true
            docker rm culture-server || true
            docker pull ${{ steps.login-ecr.outputs.registry }}/culture-server:latest
            docker run -d --name culture-server -p 8088:8088 ${{ steps.login-ecr.outputs.registry }}/culture-server:latest
